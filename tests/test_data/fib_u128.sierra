type u128 = u128;
type Unit = Struct<ut@Tuple>;
type RangeCheck = RangeCheck;
type Tuple<u128> = Struct<ut@Tuple, u128>;
type felt252 = felt252;
type Array<felt252> = Array<felt252>;
type core::PanicResult::<(core::integer::u128,)> = Enum<ut@core::PanicResult::<(core::integer::u128,)>, Tuple<u128>, Array<felt252>>;
type core::result::Result::<core::integer::u128, core::integer::u128> = Enum<ut@core::result::Result::<core::integer::u128, core::integer::u128>, u128, u128>;

libfunc disable_ap_tracking = disable_ap_tracking;
libfunc u128_const<0> = u128_const<0>;
libfunc dup<u128> = dup<u128>;
libfunc u128_eq = u128_eq;
libfunc branch_align = branch_align;
libfunc struct_construct<Unit> = struct_construct<Unit>;
libfunc drop<Unit> = drop<Unit>;
libfunc store_temp<RangeCheck> = store_temp<RangeCheck>;
libfunc store_temp<u128> = store_temp<u128>;
libfunc function_call<user@core::integer::U128Add::add> = function_call<user@core::integer::U128Add::add>;
libfunc enum_match<core::PanicResult::<(core::integer::u128,)>> = enum_match<core::PanicResult::<(core::integer::u128,)>>;
libfunc struct_deconstruct<Tuple<u128>> = struct_deconstruct<Tuple<u128>>;
libfunc u128_const<1> = u128_const<1>;
libfunc function_call<user@core::integer::U128Sub::sub> = function_call<user@core::integer::U128Sub::sub>;
libfunc function_call<user@examples::fib_u128::fib> = function_call<user@examples::fib_u128::fib>;
libfunc jump = jump;
libfunc enum_init<core::PanicResult::<(core::integer::u128,)>, 1> = enum_init<core::PanicResult::<(core::integer::u128,)>, 1>;
libfunc store_temp<core::PanicResult::<(core::integer::u128,)>> = store_temp<core::PanicResult::<(core::integer::u128,)>>;
libfunc drop<u128> = drop<u128>;
libfunc struct_construct<Tuple<u128>> = struct_construct<Tuple<u128>>;
libfunc enum_init<core::PanicResult::<(core::integer::u128,)>, 0> = enum_init<core::PanicResult::<(core::integer::u128,)>, 0>;
libfunc u128_overflowing_add = u128_overflowing_add;
libfunc enum_init<core::result::Result::<core::integer::u128, core::integer::u128>, 0> = enum_init<core::result::Result::<core::integer::u128, core::integer::u128>, 0>;
libfunc store_temp<core::result::Result::<core::integer::u128, core::integer::u128>> = store_temp<core::result::Result::<core::integer::u128, core::integer::u128>>;
libfunc enum_init<core::result::Result::<core::integer::u128, core::integer::u128>, 1> = enum_init<core::result::Result::<core::integer::u128, core::integer::u128>, 1>;
libfunc felt252_const<39878429859757942499084499860145094553463> = felt252_const<39878429859757942499084499860145094553463>;
libfunc rename<core::result::Result::<core::integer::u128, core::integer::u128>> = rename<core::result::Result::<core::integer::u128, core::integer::u128>>;
libfunc store_temp<felt252> = store_temp<felt252>;
libfunc function_call<user@core::result::ResultTraitImpl::<core::integer::u128, core::integer::u128>::expect::<core::integer::u128Drop>> = function_call<user@core::result::ResultTraitImpl::<core::integer::u128, core::integer::u128>::expect::<core::integer::u128Drop>>;
libfunc u128_overflowing_sub = u128_overflowing_sub;
libfunc felt252_const<39878429859763533771555484554338820190071> = felt252_const<39878429859763533771555484554338820190071>;
libfunc enum_match<core::result::Result::<core::integer::u128, core::integer::u128>> = enum_match<core::result::Result::<core::integer::u128, core::integer::u128>>;
libfunc drop<felt252> = drop<felt252>;
libfunc array_new<felt252> = array_new<felt252>;
libfunc array_append<felt252> = array_append<felt252>;

disable_ap_tracking() -> ();
u128_const<0>() -> ([4]);
dup<u128>([3]) -> ([3], [5]);
u128_eq([5], [4]) { fallthrough() 53() };
branch_align() -> ();
struct_construct<Unit>() -> ([6]);
drop<Unit>([6]) -> ();
store_temp<RangeCheck>([0]) -> ([9]);
store_temp<u128>([1]) -> ([10]);
dup<u128>([2]) -> ([2], [11]);
store_temp<u128>([11]) -> ([11]);
function_call<user@core::integer::U128Add::add>([9], [10], [11]) -> ([7], [8]);
enum_match<core::PanicResult::<(core::integer::u128,)>>([8]) { fallthrough([12]) 46([13]) };
branch_align() -> ();
struct_deconstruct<Tuple<u128>>([12]) -> ([14]);
u128_const<1>() -> ([15]);
store_temp<RangeCheck>([7]) -> ([18]);
store_temp<u128>([3]) -> ([19]);
store_temp<u128>([15]) -> ([20]);
function_call<user@core::integer::U128Sub::sub>([18], [19], [20]) -> ([16], [17]);
enum_match<core::PanicResult::<(core::integer::u128,)>>([17]) { fallthrough([21]) 39([22]) };
branch_align() -> ();
struct_deconstruct<Tuple<u128>>([21]) -> ([23]);
store_temp<RangeCheck>([16]) -> ([26]);
store_temp<u128>([2]) -> ([27]);
store_temp<u128>([14]) -> ([28]);
store_temp<u128>([23]) -> ([29]);
function_call<user@examples::fib_u128::fib>([26], [27], [28], [29]) -> ([24], [25]);
enum_match<core::PanicResult::<(core::integer::u128,)>>([25]) { fallthrough([30]) 34([31]) };
branch_align() -> ();
struct_deconstruct<Tuple<u128>>([30]) -> ([32]);
store_temp<RangeCheck>([24]) -> ([33]);
store_temp<u128>([32]) -> ([34]);
jump() { 60() };
branch_align() -> ();
enum_init<core::PanicResult::<(core::integer::u128,)>, 1>([31]) -> ([35]);
store_temp<RangeCheck>([24]) -> ([36]);
store_temp<core::PanicResult::<(core::integer::u128,)>>([35]) -> ([37]);
return([36], [37]);
branch_align() -> ();
drop<u128>([14]) -> ();
drop<u128>([2]) -> ();
enum_init<core::PanicResult::<(core::integer::u128,)>, 1>([22]) -> ([38]);
store_temp<RangeCheck>([16]) -> ([39]);
store_temp<core::PanicResult::<(core::integer::u128,)>>([38]) -> ([40]);
return([39], [40]);
branch_align() -> ();
drop<u128>([2]) -> ();
drop<u128>([3]) -> ();
enum_init<core::PanicResult::<(core::integer::u128,)>, 1>([13]) -> ([41]);
store_temp<RangeCheck>([7]) -> ([42]);
store_temp<core::PanicResult::<(core::integer::u128,)>>([41]) -> ([43]);
return([42], [43]);
branch_align() -> ();
drop<u128>([2]) -> ();
drop<u128>([3]) -> ();
struct_construct<Unit>() -> ([44]);
drop<Unit>([44]) -> ();
store_temp<RangeCheck>([0]) -> ([33]);
store_temp<u128>([1]) -> ([34]);
struct_construct<Tuple<u128>>([34]) -> ([45]);
enum_init<core::PanicResult::<(core::integer::u128,)>, 0>([45]) -> ([46]);
store_temp<RangeCheck>([33]) -> ([47]);
store_temp<core::PanicResult::<(core::integer::u128,)>>([46]) -> ([48]);
return([47], [48]);
u128_overflowing_add([0], [1], [2]) { fallthrough([3], [4]) 71([5], [6]) };
branch_align() -> ();
enum_init<core::result::Result::<core::integer::u128, core::integer::u128>, 0>([4]) -> ([7]);
store_temp<RangeCheck>([3]) -> ([8]);
store_temp<core::result::Result::<core::integer::u128, core::integer::u128>>([7]) -> ([9]);
jump() { 75() };
branch_align() -> ();
enum_init<core::result::Result::<core::integer::u128, core::integer::u128>, 1>([6]) -> ([10]);
store_temp<RangeCheck>([5]) -> ([8]);
store_temp<core::result::Result::<core::integer::u128, core::integer::u128>>([10]) -> ([9]);
felt252_const<39878429859757942499084499860145094553463>() -> ([11]);
rename<core::result::Result::<core::integer::u128, core::integer::u128>>([9]) -> ([13]);
store_temp<felt252>([11]) -> ([14]);
function_call<user@core::result::ResultTraitImpl::<core::integer::u128, core::integer::u128>::expect::<core::integer::u128Drop>>([13], [14]) -> ([12]);
enum_match<core::PanicResult::<(core::integer::u128,)>>([12]) { fallthrough([15]) 87([16]) };
branch_align() -> ();
struct_deconstruct<Tuple<u128>>([15]) -> ([17]);
struct_construct<Tuple<u128>>([17]) -> ([18]);
enum_init<core::PanicResult::<(core::integer::u128,)>, 0>([18]) -> ([19]);
store_temp<RangeCheck>([8]) -> ([20]);
store_temp<core::PanicResult::<(core::integer::u128,)>>([19]) -> ([21]);
return([20], [21]);
branch_align() -> ();
enum_init<core::PanicResult::<(core::integer::u128,)>, 1>([16]) -> ([22]);
store_temp<RangeCheck>([8]) -> ([23]);
store_temp<core::PanicResult::<(core::integer::u128,)>>([22]) -> ([24]);
return([23], [24]);
u128_overflowing_sub([0], [1], [2]) { fallthrough([3], [4]) 98([5], [6]) };
branch_align() -> ();
enum_init<core::result::Result::<core::integer::u128, core::integer::u128>, 0>([4]) -> ([7]);
store_temp<RangeCheck>([3]) -> ([8]);
store_temp<core::result::Result::<core::integer::u128, core::integer::u128>>([7]) -> ([9]);
jump() { 102() };
branch_align() -> ();
enum_init<core::result::Result::<core::integer::u128, core::integer::u128>, 1>([6]) -> ([10]);
store_temp<RangeCheck>([5]) -> ([8]);
store_temp<core::result::Result::<core::integer::u128, core::integer::u128>>([10]) -> ([9]);
felt252_const<39878429859763533771555484554338820190071>() -> ([11]);
rename<core::result::Result::<core::integer::u128, core::integer::u128>>([9]) -> ([13]);
store_temp<felt252>([11]) -> ([14]);
function_call<user@core::result::ResultTraitImpl::<core::integer::u128, core::integer::u128>::expect::<core::integer::u128Drop>>([13], [14]) -> ([12]);
enum_match<core::PanicResult::<(core::integer::u128,)>>([12]) { fallthrough([15]) 114([16]) };
branch_align() -> ();
struct_deconstruct<Tuple<u128>>([15]) -> ([17]);
struct_construct<Tuple<u128>>([17]) -> ([18]);
enum_init<core::PanicResult::<(core::integer::u128,)>, 0>([18]) -> ([19]);
store_temp<RangeCheck>([8]) -> ([20]);
store_temp<core::PanicResult::<(core::integer::u128,)>>([19]) -> ([21]);
return([20], [21]);
branch_align() -> ();
enum_init<core::PanicResult::<(core::integer::u128,)>, 1>([16]) -> ([22]);
store_temp<RangeCheck>([8]) -> ([23]);
store_temp<core::PanicResult::<(core::integer::u128,)>>([22]) -> ([24]);
return([23], [24]);
enum_match<core::result::Result::<core::integer::u128, core::integer::u128>>([0]) { fallthrough([2]) 126([3]) };
branch_align() -> ();
drop<felt252>([1]) -> ();
struct_construct<Tuple<u128>>([2]) -> ([4]);
enum_init<core::PanicResult::<(core::integer::u128,)>, 0>([4]) -> ([5]);
store_temp<core::PanicResult::<(core::integer::u128,)>>([5]) -> ([6]);
return([6]);
branch_align() -> ();
drop<u128>([3]) -> ();
array_new<felt252>() -> ([7]);
array_append<felt252>([7], [1]) -> ([8]);
enum_init<core::PanicResult::<(core::integer::u128,)>, 1>([8]) -> ([9]);
store_temp<core::PanicResult::<(core::integer::u128,)>>([9]) -> ([10]);
return([10]);

examples::fib_u128::fib@0([0]: RangeCheck, [1]: u128, [2]: u128, [3]: u128) -> (RangeCheck, core::PanicResult::<(core::integer::u128,)>);
core::integer::U128Add::add@65([0]: RangeCheck, [1]: u128, [2]: u128) -> (RangeCheck, core::PanicResult::<(core::integer::u128,)>);
core::integer::U128Sub::sub@92([0]: RangeCheck, [1]: u128, [2]: u128) -> (RangeCheck, core::PanicResult::<(core::integer::u128,)>);
core::result::ResultTraitImpl::<core::integer::u128, core::integer::u128>::expect::<core::integer::u128Drop>@119([0]: core::result::Result::<core::integer::u128, core::integer::u128>, [1]: felt252) -> (core::PanicResult::<(core::integer::u128,)>);
